{"ast":null,"code":"var _jsxFileName = \"/app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport maplibregl from \"maplibre-gl\";\nimport \"maplibre-gl/dist/maplibre-gl.css\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OPENFREEMAP_STYLE = \"https://tiles.openfreemap.org/styles/positron\";\nexport default function App() {\n  _s();\n  const mapContainer = useRef(null);\n  const mapRef = useRef(null);\n  const [lang, setLang] = useState(\"en\");\n  const [eventSource, setEventSource] = useState(null);\n  const base = process.env.REACT_APP_API_BASE || \"http://localhost:4000\";\n\n  // Initialize map\n  useEffect(() => {\n    const map = new maplibregl.Map({\n      container: mapContainer.current,\n      style: OPENFREEMAP_STYLE,\n      center: [77.58, 12.94],\n      zoom: 12.5\n    });\n    map.addControl(new maplibregl.NavigationControl(), \"top-right\");\n    mapRef.current = map;\n    map.on(\"load\", () => {\n      console.log(\"üó∫Ô∏è Map loaded successfully\");\n      loadStream(map.getBounds());\n      map.on(\"moveend\", () => {\n        loadStream(map.getBounds());\n      });\n    });\n    return () => {\n      if (eventSource) eventSource.close();\n      map.remove();\n    };\n  }, [lang]);\n\n  // Subscribe to backend stream\n  const loadStream = bounds => {\n    const bbox = [bounds.getWest(), bounds.getSouth(), bounds.getEast(), bounds.getNorth()].join(\",\");\n    const url = `${base}/api/places-stream?lang=${lang}&bbox=${bbox}`;\n    console.log(\"üîó Connecting stream:\", url);\n    if (eventSource) eventSource.close();\n    const es = new EventSource(url);\n    setEventSource(es);\n    es.onmessage = event => {\n      const geojson = JSON.parse(event.data);\n      updateMap(geojson);\n    };\n    es.onerror = err => {\n      console.error(\"‚ùå Stream error:\", err);\n      es.close();\n    };\n  };\n\n  // Render GeoJSON\n  const updateMap = geojson => {\n    const map = mapRef.current;\n    if (!map) return;\n    if (map.getLayer(\"places\")) map.removeLayer(\"places\");\n    if (map.getSource(\"places\")) map.removeSource(\"places\");\n    map.addSource(\"places\", {\n      type: \"geojson\",\n      data: geojson\n    });\n    map.addLayer({\n      id: \"places\",\n      type: \"symbol\",\n      source: \"places\",\n      layout: {\n        \"text-field\": [\"coalesce\", [\"get\", \"name_kn\"], [\"get\", \"name\"]],\n        \"text-font\": [\"Noto Sans Kannada Regular\", \"Arial Unicode MS Regular\"],\n        \"text-size\": 13,\n        \"text-offset\": [0, 1.2],\n        \"text-anchor\": \"top\"\n      },\n      paint: {\n        \"text-color\": \"#222\",\n        \"text-halo-color\": \"#fff\",\n        \"text-halo-width\": 1.3\n      }\n    });\n  };\n  const toggleLang = () => {\n    const next = lang === \"en\" ? \"kn\" : \"en\";\n    setLang(next);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"topbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Bhuvan Kannada Live Map \\uD83C\\uDF10\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: toggleLang,\n        children: lang === \"en\" ? \"Translate ‚Üí Kannada\" : \"Show English\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapContainer,\n      className: \"map-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"footer\",\n      children: \"Real-time Streaming Translation \\u2014 Powered by PostGIS + Lingvanex\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"u+qxthd7VvH4AGXnL/az/hxaSOQ=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","useState","maplibregl","jsxDEV","_jsxDEV","OPENFREEMAP_STYLE","App","_s","mapContainer","mapRef","lang","setLang","eventSource","setEventSource","base","process","env","REACT_APP_API_BASE","map","Map","container","current","style","center","zoom","addControl","NavigationControl","on","console","log","loadStream","getBounds","close","remove","bounds","bbox","getWest","getSouth","getEast","getNorth","join","url","es","EventSource","onmessage","event","geojson","JSON","parse","data","updateMap","onerror","err","error","getLayer","removeLayer","getSource","removeSource","addSource","type","addLayer","id","source","layout","paint","toggleLang","next","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","_c","$RefreshReg$"],"sources":["/app/src/App.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport maplibregl from \"maplibre-gl\";\nimport \"maplibre-gl/dist/maplibre-gl.css\";\nimport \"./styles.css\";\n\nconst OPENFREEMAP_STYLE = \"https://tiles.openfreemap.org/styles/positron\";\n\nexport default function App() {\n  const mapContainer = useRef(null);\n  const mapRef = useRef(null);\n  const [lang, setLang] = useState(\"en\");\n  const [eventSource, setEventSource] = useState(null);\n  const base = process.env.REACT_APP_API_BASE || \"http://localhost:4000\";\n\n  // Initialize map\n  useEffect(() => {\n    const map = new maplibregl.Map({\n      container: mapContainer.current,\n      style: OPENFREEMAP_STYLE,\n      center: [77.58, 12.94],\n      zoom: 12.5,\n    });\n\n    map.addControl(new maplibregl.NavigationControl(), \"top-right\");\n    mapRef.current = map;\n\n    map.on(\"load\", () => {\n      console.log(\"üó∫Ô∏è Map loaded successfully\");\n      loadStream(map.getBounds());\n      map.on(\"moveend\", () => {\n        loadStream(map.getBounds());\n      });\n    });\n\n    return () => {\n      if (eventSource) eventSource.close();\n      map.remove();\n    };\n  }, [lang]);\n\n  // Subscribe to backend stream\n  const loadStream = (bounds) => {\n    const bbox = [\n      bounds.getWest(),\n      bounds.getSouth(),\n      bounds.getEast(),\n      bounds.getNorth(),\n    ].join(\",\");\n\n    const url = `${base}/api/places-stream?lang=${lang}&bbox=${bbox}`;\n    console.log(\"üîó Connecting stream:\", url);\n\n    if (eventSource) eventSource.close();\n    const es = new EventSource(url);\n    setEventSource(es);\n\n    es.onmessage = (event) => {\n      const geojson = JSON.parse(event.data);\n      updateMap(geojson);\n    };\n\n    es.onerror = (err) => {\n      console.error(\"‚ùå Stream error:\", err);\n      es.close();\n    };\n  };\n\n  // Render GeoJSON\n  const updateMap = (geojson) => {\n    const map = mapRef.current;\n    if (!map) return;\n\n    if (map.getLayer(\"places\")) map.removeLayer(\"places\");\n    if (map.getSource(\"places\")) map.removeSource(\"places\");\n\n    map.addSource(\"places\", { type: \"geojson\", data: geojson });\n    map.addLayer({\n      id: \"places\",\n      type: \"symbol\",\n      source: \"places\",\n      layout: {\n        \"text-field\": [\"coalesce\", [\"get\", \"name_kn\"], [\"get\", \"name\"]],\n        \"text-font\": [\"Noto Sans Kannada Regular\", \"Arial Unicode MS Regular\"],\n        \"text-size\": 13,\n        \"text-offset\": [0, 1.2],\n        \"text-anchor\": \"top\",\n      },\n      paint: {\n        \"text-color\": \"#222\",\n        \"text-halo-color\": \"#fff\",\n        \"text-halo-width\": 1.3,\n      },\n    });\n  };\n\n  const toggleLang = () => {\n    const next = lang === \"en\" ? \"kn\" : \"en\";\n    setLang(next);\n  };\n\n  return (\n    <div className=\"app\">\n      <header className=\"topbar\">\n        <h1>Bhuvan Kannada Live Map üåê</h1>\n        <button className=\"btn\" onClick={toggleLang}>\n          {lang === \"en\" ? \"Translate ‚Üí Kannada\" : \"Show English\"}\n        </button>\n      </header>\n      <div ref={mapContainer} className=\"map-container\" />\n      <footer className=\"footer\">\n        Real-time Streaming Translation ‚Äî Powered by PostGIS + Lingvanex\n      </footer>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}